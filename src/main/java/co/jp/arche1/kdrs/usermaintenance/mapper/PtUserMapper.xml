<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="co.jp.arche1.kdrs.usermaintenance.mapper.PtUserMapper" >
	<resultMap id="ptuserMap" type="co.jp.arche1.kdrs.usermaintenance.repository.PtUserRepository" >
		<id column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="sei" property="sei" jdbcType="VARCHAR" />
		<result column="mei" property="mei" jdbcType="VARCHAR" />
		<result column="sei_kana" property="seiKana" jdbcType="VARCHAR" />
		<result column="mei_kana" property="meiKana" jdbcType="VARCHAR" />
		<result column="phone" property="phone" jdbcType="VARCHAR" />
		<result column="prefacture" property="prefacture" jdbcType="VARCHAR" />
		<result column="city" property="city" jdbcType="VARCHAR" />
		<result column="street_number" property="streetNumber" jdbcType="VARCHAR" />
		<result column="building_name" property="buildingName" jdbcType="VARCHAR" />
		<result column="deleted" property="deleted" jdbcType="TINYINT" />

	</resultMap>

	<!-- select id="findAll" resultType="co.jp.arche1.kdrs.usermaintenance.repository.PtUserRepository" -->
	<select id="selectOne" resultMap="ptuserMap" >
		SELECT
			user_id,
			password,
			mail as email,
			sei,
			mei,
			sei_kana,
			mei_kana,
			phone,
			prefacture,
			city,
			street_number,
			building_name,
			deleted
		FROM
			pt_user
		WHERE
			mail = #{email}
	</select>

	<select id="selectMax"  resultType="int">
		select COALESCE(MAX(user_id), 0) from pt_user
		LOCK IN SHARE MODE
    </select>

	<!-- insert id="insert" parameterType="co.jp.arche1.kdrs.usermaintenance.repository.PtUserRepository" useGeneratedKeys="true" keyProperty="user_id" -->
	<insert id="insert" parameterType="co.jp.arche1.kdrs.usermaintenance.repository.PtUserRepository" useGeneratedKeys="true" keyProperty="userId">
		INSERT INTO
			pt_user
		(
			sei,
			mei,
			sei_kana,
			mei_kana,
			mail,
			password,
			phone,
			prefacture,
			city,
			street_number,
			building_name,
			deleted,
			created_at,
			updated_at
		)
		VALUES
		(
			#{sei}
			,#{mei}
			,#{seiKana}
			,#{meiKana}
			,#{email}
			,#{password}
			,#{phone}
			,#{prefacture}
			,#{city}
			,#{streetNumber}
			,#{buildingName}
			,#{deleted}
			,CURRENT_TIMESTAMP
			,CURRENT_TIMESTAMP
		)
    </insert>

    <update id="deleteUpdate">
      UPDATE
			pt_user
   		<set>
   		  created_at = CURRENT_TIMESTAMP,
   		  deleted =  #{deleted}
   		</set>
   		WHERE
			user_id = #{userId}
    </update>

	<!-- 引数が複数存在するので、 parameterTypeを使用しない。そのため、クラスならメンバー変数の前にインスタンス名が必要になる。
	update id="update" parameterType="co.jp.arche1.kdrs.usermaintenance.repository.PtUserRepository" useGeneratedKeys="true" keyProperty="user_id" -->

	<update id="update" parameterType="co.jp.arche1.kdrs.usermaintenance.repository.PtUserRepository" useGeneratedKeys="true" keyProperty="user_id">
		UPDATE
			pt_user
   		<set>
			<if test="sei != null">
				sei = #{sei},
	       	</if>
	       	<if test="mei != null">
				mei = #{mei},
	       	</if>
	       	<if test="seiKana != null">
				sei_kana = #{seiKana},
	       	</if>
	       	<if test="meiKana != null">
				mei_kana = #{meiKana},
	       	</if>
			<if test="password != null">
				password = #{password},
	       	</if>
			<if test="email != null">
				mail = #{email},
	       	</if>
	       	<if test="phone != null">
				phone = #{phone},
	       	</if>
	       	<if test="prefacture != null">
				prefacture = #{prefacture},
	       	</if>
	       	<if test="city != null">
				city = #{city},
	       	</if>
	       	<if test="streetNumber != null">
				street_number = #{streetNumber},
	       	</if>
	       	<if test="buildingName != null">
				building_name = #{buildingName},
	       	</if>
	       	updated_at = CURRENT_TIMESTAMP
   		</set>
		WHERE
			user_id = #{userId}
	</update>

    <delete id="delete">
		DELETE FROM
			pt_user
		WHERE
			user_id = #{userId}
			AND upd_datetime = #{updDatetimeWhenReading}
	</delete>

</mapper>
